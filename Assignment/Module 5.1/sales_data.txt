=> First creating database:
create database sales_data;
-----------------------------------------
=> create table:
create table salesperson
(
    sno int(5) PRIMARY KEY AUTO_INCREMENT,
    sname varchar(20),
    city varchar(20),
    comm int
)
----------------------------------------
=> insert values in salesperson table:
insert into salesperson values
(1001,'Peel','London',.12),
(1002,'Sarres','San Jose',.13),
(1004,'Motika','London',.11),
(1007,'Rafkin',Barcelona,.15),
(1003,'Axelrod','New york',.1);
-----------------------------------------
=> create customer table:
create table customer
(
    cnm int PRIMARY KEY AUTO_INCREMENT,
    cname varchar(20),
    city varchar(20),
    rating int
    sno int,
    FOREIGN KEY(sno) REFERENCES salesperson(sno)
);
----------------------------------------
=> insert values in customer table:
insert into customer VALUES
(201,'Hoffman','London',100,1001),
(202,'Giovanne','Roe',200,1003),
(203,'Liu','San Jose',300,1002),
(204,'Grass','Brcelona',100,1002),
(206,'Clemens','London',300,1007),
(207,'Pereira','Roe',100,1004)
---------------------------------------
=> All orders for rating more than 100.
select * from customer where rating > 100;
---------------------------------------
=> Names and cities of all salespeople in London with commission above 0.12
select `sname`,`city` from salesperson where `city` = 'london' AND `comm` >= .12;
---------------------------------------
=> All salespeople either in Barcelona or in London
select `sname` from salesperson where city = 'london' OR city = 'Barcelona';
---------------------------------------
=> All salespeople with commission between 0.10 and 0.12. (Boundary valuesshould be excluded).
SELECT sname from salesperson where comm > 0.10 and comm < 0.12;
---------------------------------------
=> All customers excluding those with rating <= 100 unless they are located inRome
SELECT * from customer where `city` != 'Roe' AND rating >=100;

---------------------------------------
=> create salespeople table:
create table salespeople
(
    salesman_id int 
    name varchar(20),
    city varchar(20),
    commission int
);
--------------------------------------
insert values into salespeople
INSERT INTO `salespeople` VALUES 
(5001,'James Hoog', 'New York', 0.15),
(5002, 'Nail Knite', 'Paris', 0.13),
(5005, 'Pit Alex', 'London', 0.11),
(5006, 'Mc Lyon', 'Paris', 0.14),
(5007, 'Paul Adam', 'Rome', 0.13),
(5003, 'Lauson Hen', 'San Jose', 0.12)
---------------------------------------
=> create orders table:
create table orders
(
    ord_no int 
    purch_amt int,
    ord_date int,
    customer_id int,
    salesman_id int
);
--------------------------------------
insert values into orders 
INSERT INTO `orders` VALUES
(70001, 150.5, 2012-10-05, 3005, 5002),
(70009, 270.65, 2012-09-10, 3001, 5005),
(70002, 65.26, 2012-10-05, 3002, 5001),
(70004, 110.5, 2012-08-17, 3009, 5003),
(70007, 948.5, 2012-09-10, 3005, 5002),
(70005, 2400.6, 2012-07-27, 3007, 5001),
(70008, 5760, 2012-09-10, 3002, 5001),
(70010, 1983.43, 2012-10-10, 3004, 5006),
(70003, 2480.4, 2012-10-10, 3009, 5003),
(70012, 250.45, 2012-06-27, 3008, 5002),
(70011, 75.29, 2012-08-17, 3003, 5007),
(70013, 3045.6, 2012-04-25, 3002, 5001)
----------------------------------------
=> create item_mast table:
create table item_mast
(
    pro_id int 
    pro_name varchar(20),
    pro_price int,
    pro_com int
);
---------------------------------------
insert values into item_mast
INSERT INTO `item_mast` VALUES 
(101,'Mother Board',3200.00,15),
(102,'Key Board',450.00,16),
(103,'ZIP drive',250.00,14),
(104,'Speaker',550.00,16),
(105,'Monitor',5000.00,11),
(106,'DVD drive',900.00,12),
(107,'CD drive',800.00,12),
(108,'Printer',2600.00,13),
(109,'Refill cartridge',350.00,13),
(110,'Mouse',250.00,12),
--------------------------------------
=> Write a SQL statement that displays all the information about all salespeople
select * from salespeople;
--------------------------------------------------
=> From the following table, write a SQL query to find orders that are delivered by a salesperson with ID. 5001. Return ord_no, ord_date, purch_amt.
select ord_no,ord_date,purch_amt from orders where salesman_id = 5001;
--------------------------------------------------
=> From the following table, write a SQL query to select a range of products whose price is in the range Rs.200 to Rs.600. Begin and end values are included. Return pro_id, pro_name, pro_price, and pro_com.
select pro_id,pro_name,pro_price,pro_com from item_mast where pro_price >= 200 AND pro_price <= 600;
--------------------------------------------------
=> From the following table, write a SQL query to calculate the average price for a manufacturer code of 16. Return avg.
select avg(pro_price) from item_mast where pro_com = 16;
--------------------------------------------------
=> From the following table, write a SQL query to display the pro_name as 'Item Name' and pro_priceas 'Price in Rs.'
select pro_name as 'Item Name', pro_price as 'Price in RS' from item_mast;
--------------------------------------------------
=> From the following table, write a SQL query to find the items whose prices are higher than or equal to $250. Order the result by product price in descending, then product name in ascending. Return pro_name and pro_price.
select pro_name, pro_price from item_mast where pro_price >= 250 order by pro_price DESC, pro_name asc;
--------------------------------------------------
=> From the following table, write a SQL query to calculate average price of the items for each company. Return average price and company code.
select avg(`pro_price`), `pro_com` from item_mast GROUP BY pro_com;
